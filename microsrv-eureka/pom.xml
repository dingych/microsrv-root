<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>microsrv-root</artifactId>
        <groupId>com.hgframework.microsrv.root</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <docker.image.prefix>images-center.io</docker.image.prefix>
    </properties>

    <groupId>com.hgframework.microsrv.eureka</groupId>
    <artifactId>microsrv-eureka</artifactId>

    <dependencies>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-eureka-server</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <finalName>${project.name}</finalName>
        <plugins>
            <!--用来构建java spring fat jar文件-->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <!-- tag::plugin[] -->
            <!--构建docker 镜像-->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.4.3</version>
                <!--docker镜像相关配置，其实说白了就是构建docker镜像的全名称，例如：公司名称(提交的镜像中心):项目名称:版本-->
                <configuration>
                    <imageName>${docker.image.prefix}/${project.artifactId}:${project.version}</imageName>
                    <!--dockerfile配置文件路径，建议放在以下目录中，-->
                    <!--执行命令a：mvn clean package -Dmaven.test.skip=true-->
                    <!--执行命令b：mvn package docker:build-->
                    <!--必须先执行命令a然后执行命令b-->
                    <!--docker镜像路径-->
                    <dockerDirectory>src/main/docker</dockerDirectory>
                    <resources>
                        <resource>
                            <!--项目root目录 例如 microsrv-eureka-->
                            <targetPath>/</targetPath>
                            <!--构建目录一般是target 其实就是默认目录，如果指定别目录请考虑权限问题-->
                            <directory>${project.build.directory}</directory>
                            <!--建议用去版本号的项目名，否则需要经常修改dockerfile，版本后可以放在imageName配置中进行处理-->
                            <include>${project.build.finalName}.jar</include>
                        </resource>
                    </resources>
                </configuration>
            </plugin>
            <!-- end::plugin[] -->
        </plugins>
    </build>
</project>