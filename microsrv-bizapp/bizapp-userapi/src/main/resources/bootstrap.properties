######################################################################################
#配置中心的地址一定要放在bootstrap.properties中，这个配置文件是由根“(resources)下面"上下文优先加载
#可以保证程序启动之初就感知到远程配置中心的存在，并从远程获取配置，随后继续启动系统
#
#而application.properties是由子上下文加载，加载顺序低于前者，如果配置中心地址放在这里
#，并且你远程配置了一些启动相关的必要参数，那么，你的程序很可能由于缺少参数而启动失败
#
#####################################################################################
#rpc模式开启熔断服务，且main 类中必须有 @EnableFeignClients
#feign.hystrix.enabled=true
#注册到注册及服务发现机器，如果是多台可以做逗号隔开，做高可用处理
#eureka.client.serviceUrl.defaultZone=http://localhost:8000/eureka/
eureka.server.port=8000
eureka.server.hostname=http://192.168.132.128
#eureka.client.register-with-eureka=false
#eureka.client.fetch-registry=false
eureka.client.serviceUrl.defaultZone=${eureka.server.hostname}:${eureka.server.port}/eureka/
#######################################################################################
#向注册中心查询可用的配置服务器，然后从配置中心获取相应配置属性
#spring.cloud.config.label=master
spring.cloud.config.discovery.enabled=true
#查询服务ID
spring.cloud.config.discovery.serviceId=com.hgframework.config.server
#打开模式(云服务模式) config.profile为外部传入参数 --config.profile=dev
#我们一般的做法是，在系统启动的时候，用命令行传入--spring.cloud.config.profile=dev|prod|test的方式
#当然我们一般用占位符处理${config.profile}
spring.cloud.config.profile=${config.profile:dev}
#标签 tag,master等
spring.cloud.config.label=master
#如果不配置系统默认读取spring.application.name （远程配置文件名称,可用通用单一的配置文件）即${spring.application.name}.properties
spring.cloud.config.name=com.hgframework.base
#############################################################################################
#
#rpc跟踪调用站
#spring.zipkin.base-url=http://localhost:5000
spring.zipkin.enabled=false
spring.zipkin.base-url=${spring.zipkin.url}
